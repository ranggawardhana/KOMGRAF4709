#include <GL/glut.h>
#include <iostream>

int x1, y1, x2, y2;
bool isDrawing = false;

void drawLine() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0, 0.0, 0.0); // Warna garis hitam

    glBegin(GL_LINES);
    glVertex2i(x1, y1);
    glVertex2i(x2, y2);
    glEnd();

    glFlush();
}

void display() {
    if (isDrawing) {
        drawLine();
    }
}

void mouse(int button, int state, int x, int y) {
    if (state == GLUT_DOWN) {
        if (!isDrawing) {
            x1 = x;
            y1 = glutGet(GLUT_WINDOW_HEIGHT) - y;
            isDrawing = true;
        } else {
            x2 = x;
            y2 = glutGet(GLUT_WINDOW_HEIGHT) - y;
            isDrawing = false;
            drawLine(); // Menggambar garis setelah kedua titik diambil
        }
    }
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Simple Line Drawing");

    glClearColor(1.0, 1.0, 1.0, 0.0); // Warna latar belakang putih
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0, 800, 0, 600);

    std::cout << "Masukkan koordinat x1: ";
    std::cin >> x1;
    std::cout << "Masukkan koordinat y1: ";
    std::cin >> y1;
    std::cout << "Masukkan koordinat x2: ";
    std::cin >> x2;
    std::cout << "Masukkan koordinat y2: ";
    std::cin >> y2;

    glutDisplayFunc(display);
    glutMouseFunc(mouse);

    glutMainLoop();

    return 0;
}